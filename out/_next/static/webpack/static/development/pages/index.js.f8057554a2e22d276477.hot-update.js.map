{"version":3,"file":"static/webpack/static/development/pages/index.js.f8057554a2e22d276477.hot-update.js","sources":["webpack:///./pages/screens/portfolio/index.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Flex, Box } from '@rebass/grid';\nimport Swiper from 'react-id-swiper/lib/ReactIdSwiper.full';\nimport PortfolioItem from '../../../components/PortfolioItem';\nimport portfolio from './portfolio.json';\nimport { container, cover } from '../../../style/theme';\n\nconst imageSwiperParams = {\n  containerClass: 'image-swiper',\n  init: false,\n  loop: true,\n  loopAdditionalSlides: 3,\n  speed: 700,\n  slidesPerView: 1.6,\n  centeredSlides: true,\n  effect: 'coverflow',\n  coverflowEffect: {\n    rotate: 50,\n    stretch: 0,\n    depth: 100,\n    modifier: 1,\n    slideShadows: true,\n  },\n  grabCursor: true,\n  parallax: true,\n  breakpoints: {\n    1023: {\n      slidesPerView: 1,\n      spaceBetween: 0,\n    },\n  },\n};\n\nconst infoSwiperParams = {\n  containerClass: 'info-swiper',\n  init: false,\n  loop: true,\n  loopAdditionalSlides: 3,\n  speed: 700,\n  effect: 'fade',\n  navigation: {\n    prevEl: '.prev',\n    nextEl: '.next',\n  },\n};\n\nconst Portfolio = ({ active }) => {\n  const [imageSwiper, updateImageSwiper] = useState(null);\n  const [infoSwiper, updateInfoSwiper] = useState(null);\n  useEffect(() => {\n    if (imageSwiper) imageSwiper.init();\n    if (infoSwiper) infoSwiper.init();\n    if (imageSwiper && infoSwiper) {\n      imageSwiper.controller.control = infoSwiper;\n      infoSwiper.controller.control = imageSwiper;\n    }\n  }, [imageSwiper, infoSwiper]);\n\n  return (\n    <Outer active={active}>\n      <Flex className=\"screen\" flexDirection=\"column\" justifyContent=\"center\">\n        <Swiper getSwiper={updateImageSwiper} {...imageSwiperParams}>\n          {portfolio.map(item => (\n            <div className=\"slide\" key={`${item.images.desktop}-${item.images.mobile}`}>\n              <PortfolioItem.Image data={item} />\n            </div>\n          ))}\n        </Swiper>\n        <Swiper\n          getSwiper={updateInfoSwiper}\n          {...infoSwiperParams}\n          renderPrevButton={() => (\n            <Flex className=\"prev\" alignItems=\"center\">\n              <div className=\"bx bx-left-arrow\" />\n              <Box ml=\"5px\" mt=\"2px\">\n                PREVIOUS\n              </Box>\n            </Flex>\n          )}\n          renderNextButton={() => (\n            <Flex className=\"next\" alignItems=\"center\">\n              <Box mr=\"5px\" mt=\"2px\">\n                NEXT\n              </Box>\n              <div className=\"bx bx-right-arrow\" />\n            </Flex>\n          )}\n        >\n          {portfolio.map(item => (\n            <div className=\"slide\" key={item.title}>\n              <PortfolioItem.Info data={item} />\n            </div>\n          ))}\n        </Swiper>\n      </Flex>\n    </Outer>\n  );\n};\n\nconst Outer = styled(Flex).attrs({ as: 'section' })`\n  ${cover()};\n  opacity: ${props => (props.active ? '1' : '0')};\n  pointer-events: ${props => (props.active ? 'visible' : 'none')};\n  transition: ${props => (props.active ? '1s 0.4s' : '0.1s')};\n  color: white;\n  .screen {\n    ${container};\n    padding: 40px 0;\n    .image-swiper,\n    .info-swiper {\n      overflow: hidden;\n    }\n    .image-swiper {\n      margin-top: 40px;\n    }\n    .info-swiper {\n      padding-bottom: 50px;\n      position: relative;\n      .prev,\n      .next {\n        position: absolute;\n        bottom: 20px;\n        font-size: 14px;\n        line-height: 1;\n        letter-spacing: 2px;\n        font-weight: 300;\n        cursor: pointer;\n        .bx {\n          font-size: 12px;\n        }\n      }\n      .prev {\n        left: 18.75%;\n      }\n      .next {\n        right: 18.75%;\n      }\n    }\n  }\n`;\n\nexport default Portfolio;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAlBA;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAPA;AACA;AAYA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAOA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAQA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAsCA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}